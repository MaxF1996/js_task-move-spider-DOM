{"mappings":"ACEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAO,EAAE,MAAM,CAAC,OAAO,CAAC,SACxB,EAAS,SAAS,aAAa,CAAC,WAEtC,GAAK,GAIL,IAAM,EAAW,EAAK,qBAAqB,GACrC,EAAgB,iBAAiB,GACjC,EAAa,WAAW,EAAc,eAAe,EACrD,EAAY,WAAW,EAAc,cAAc,EAEnD,EAAW,EAAE,OAAO,CAAG,EAAS,IAAI,CAAG,EACvC,EAAW,EAAE,OAAO,CAAG,EAAS,GAAG,CAAG,EAEtC,EAAc,EAAO,WAAW,CAChC,EAAe,EAAO,YAAY,CAMlC,EAAO,EAAK,WAAW,CAAG,EAC1B,EAAO,EAAK,YAAY,CAAG,EAE7B,EAAO,EARW,EAAc,EAShC,EAAO,EARW,EAAe,EAUrC,EAAO,KAAK,GAAG,CARF,EAQS,KAAK,GAAG,CAAC,EAAM,IACrC,EAAO,KAAK,GAAG,CARF,EAQS,KAAK,GAAG,CAAC,EAAM,IAErC,EAAO,KAAK,CAAC,IAAI,CAAG,GAAQ,MAAA,CAAL,EAAK,MAC5B,EAAO,KAAK,CAAC,GAAG,CAAG,GAAQ,MAAA,CAAL,EAAK,MAC7B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", function(e) {\n    var wall = e.target.closest(\".wall\");\n    var spider = document.querySelector(\".spider\");\n    if (!wall) return;\n    var wallRect = wall.getBoundingClientRect();\n    var computedStyle = getComputedStyle(wall);\n    var borderLeft = parseFloat(computedStyle.borderLeftWidth);\n    var borderTop = parseFloat(computedStyle.borderTopWidth);\n    var pointerX = e.clientX - wallRect.left - borderLeft;\n    var pointerY = e.clientY - wallRect.top - borderTop;\n    var spiderWidth = spider.offsetWidth;\n    var spiderHeight = spider.offsetHeight;\n    var spiderCenterX = spiderWidth / 2;\n    var spiderCenterY = spiderHeight / 2;\n    var minX = 0;\n    var minY = 0;\n    var maxX = wall.clientWidth - spiderWidth;\n    var maxY = wall.clientHeight - spiderHeight;\n    var newX = pointerX - spiderCenterX;\n    var newY = pointerY - spiderCenterY;\n    newX = Math.max(minX, Math.min(newX, maxX));\n    newY = Math.max(minY, Math.min(newY, maxY));\n    spider.style.left = \"\".concat(newX, \"px\");\n    spider.style.top = \"\".concat(newY, \"px\");\n});\n\n//# sourceMappingURL=index.36f03aa9.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const wall = e.target.closest('.wall');\n  const spider = document.querySelector('.spider');\n\n  if (!wall) {\n    return;\n  }\n\n  const wallRect = wall.getBoundingClientRect();\n  const computedStyle = getComputedStyle(wall);\n  const borderLeft = parseFloat(computedStyle.borderLeftWidth);\n  const borderTop = parseFloat(computedStyle.borderTopWidth);\n\n  const pointerX = e.clientX - wallRect.left - borderLeft;\n  const pointerY = e.clientY - wallRect.top - borderTop;\n\n  const spiderWidth = spider.offsetWidth;\n  const spiderHeight = spider.offsetHeight;\n  const spiderCenterX = spiderWidth / 2;\n  const spiderCenterY = spiderHeight / 2;\n\n  const minX = 0;\n  const minY = 0;\n  const maxX = wall.clientWidth - spiderWidth;\n  const maxY = wall.clientHeight - spiderHeight;\n\n  let newX = pointerX - spiderCenterX;\n  let newY = pointerY - spiderCenterY;\n\n  newX = Math.max(minX, Math.min(newX, maxX));\n  newY = Math.max(minY, Math.min(newY, maxY));\n\n  spider.style.left = `${newX}px`;\n  spider.style.top = `${newY}px`;\n});\n"],"names":["document","addEventListener","e","wall","target","closest","spider","querySelector","wallRect","getBoundingClientRect","computedStyle","getComputedStyle","borderLeft","parseFloat","borderLeftWidth","borderTop","borderTopWidth","pointerX","clientX","left","pointerY","clientY","top","spiderWidth","offsetWidth","spiderHeight","offsetHeight","maxX","clientWidth","maxY","clientHeight","newX","newY","Math","max","min","style","concat"],"version":3,"file":"index.36f03aa9.js.map"}